// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract WestToken {
    // Public variables to store token details
    string public name = "West"; // Name of the token
    string public symbol = "WST"; // Token symbol
    uint256 public totalSupply = 0; // Total token supply, initially set to 0

    // Mapping to keep track of each address's token balance
    mapping(address => uint256) public balances;

    // Events to log minting and burning actions
    event TokensMinted(address indexed to, uint256 amount);
    event TokensBurned(address indexed from, uint256 amount);

    // Function to mint new tokens
    function mint(address _to, uint256 _amount) public {
        require(_to != address(0), "Invalid address");
        require(_amount > 0, "Amount must be greater than zero");

        totalSupply += _amount; // Increase the total supply
        balances[_to] += _amount; // Add tokens to the recipient's balance

        emit TokensMinted(_to, _amount); // Log the minting action
    }

    // Function to burn existing tokens
    function burn(address _from, uint256 _amount) public {
        require(_from != address(0), "Invalid address");
        require(_amount > 0, "Amount must be greater than zero");
        require(balances[_from] >= _amount, "Insufficient balance");

        totalSupply -= _amount; // Decrease the total supply
        balances[_from] -= _amount; // Deduct tokens from the specified balance

        emit TokensBurned(_from, _amount); // Log the burning action
    }
}
